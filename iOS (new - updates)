<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>UIRequiresFullScreen</key>
	<true/>
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleName</key>
	<string>$(PRODUCT_NAME)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>$(PRODUCT_NAME)</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>1.0.2</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleVersion</key>
	<string>1</string>
	<string>1.11</string>
	<key>LSApplicationCategoryType</key>
	<string></string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>LSRequiresIPhoneOS</key>
	<true/>
	<key>NSCameraUsageDescription</key>
	<string>Used for QR scanner</string>
	<key>NSMotionUsageDescription</key>
	<string>Used for vehicle steering</string>
	<key>UIAppFonts</key>
@@ -31,20 +39,12 @@
	<array>
		<string>armv7</string>
	</array>
	<key>UIRequiresFullScreen</key>
	<true/>
	<key>UISupportedInterfaceOrientations</key>
	<array>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>NSCameraUsageDescription</key>
	<string>Used for QR scanner</string>
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	<key>CFBundleShortVersionString</key>
	<string>1.0</string>
</dict>
</plist>
  13  iOS/BeamNG.SteeringDevice/BeamNG.SteeringDevice/PSSessionViewController.swift 
@@ -255,7 +255,7 @@ class PSSessionViewController : UIViewController, AVCaptureMetadataOutputObjects

        buttonDisconnect = UIButton(type: UIButtonType.system) as UIButton;
        buttonDisconnect.frame = CGRect(x: self.view.frame.width-(self.view.frame.width * 0.1)-10, y: 20, width: self.view.frame.width * 0.1, height: self.view.frame.height * 0.08);
        buttonDisconnect.setTitle("Disconnect", for: UIControlState());
        buttonDisconnect.setTitle("Back", for: UIControlState());
        buttonDisconnect.addTarget(self, action: #selector(PSSessionViewController.onButtonDisconnect), for: UIControlEvents.touchUpInside);
        buttonDisconnect.backgroundColor = UIColor(red: 0.3, green: 0.3, blue: 0.3, alpha: 1.0);
        self.view.addSubview(buttonDisconnect);
@@ -388,7 +388,7 @@ class PSSessionViewController : UIViewController, AVCaptureMetadataOutputObjects


        startScreen = UIImage(named: "startscreen")!;
        startScreenView = UIImageView(frame: CGRect(x: self.view.frame.width/2-(self.view.frame.width * 0.6/2), y: 20, width: self.view.frame.width * 0.6, height: self.view.frame.height * 0.35));
        startScreenView = UIImageView(frame: CGRect(x: self.view.frame.width/2-(self.view.frame.width * 0.55/2), y: 20, width: self.view.frame.width * 0.55, height: self.view.frame.height * 0.35));
        startScreenView.image = startScreen;
        self.view.addSubview(startScreenView);
        self.view.bringSubview(toFront: startScreenView!);
@@ -463,7 +463,14 @@ class PSSessionViewController : UIViewController, AVCaptureMetadataOutputObjects
                //print("get steer angle");
                //self.session.currentData.steer = round(Float(translatedAngle / 90.0) * -1.0);
                //print(self.senSlider.value);
                self.session.currentData.steer = ((Float(translatedAngle / 90.0) * -1.0)-0.5)*self.senSlider.value+0.5;
                var steerVal : Float = ((Float(translatedAngle / 90.0) * -1.0)-0.5)*self.senSlider.value+0.5;
                if (steerVal > 1) {
                    steerVal = 1;
                }
                else if (steerVal < 0) {
                    steerVal = 0;
                }
                self.session.currentData.steer = steerVal;
                //print("session exists, send data");
                self.session.sendCurrentData();
            }
